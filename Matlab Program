function mainProgram
calcsCheck=0; %Variable to check if calculations need to be run
    %Menu function to choose sub programs to run
    %Data Capture
    %calculations; %IMPLEMENT AUTOMATICALLY
    parameters; %Settings
    %Graphing
    %Statistics
    %Load and save data
    %Comparison
    %Exit
    
end

function calculations
i=1; %Loop index definer to store specific values at specific points in the data arrays
timeData = zeros(1,sampleNumber); %Initialise empty arrays with set dimensions so don't resize each loop
xData = zeros(1,sampleNumber); yData = zeros(1,sampleNumber); zData = zeros(1,sampleNumber);
pitchAng = zeros(1,sampleNumber); rollAng = zeros(1,sampleNumber); yawAng = zeros(1,sampleNumber);
pitchVel = zeros(1,sampleNumber); rollVel = zeros(1,sampleNumber); yawVel = zeros(1,sampleNumber);
pitchAcc = zeros(1,sampleNumber); rollAcc = zeros(1,sampleNumber); yawAcc = zeros(1,sampleNumber);
%Arrays initialised for X, Y and Z Data, Roll, Pitch and Yaw Angle,
%Velocity and Acceleration
pitchAng(i)=Arctan(x/sqrt(y^2+z^2))
end

function [sampleRate, sampleNumber]=parameters(sampleRate, sampleNumber)
  exitflag = 0;
  while (exitFlag==0)
    fprintf('Parameter settings\n');
    fprintf('1. Print current parameters\n');
    fprintf('2. Change parameters\n');
    fprintf('3. Exit\n');
    userInputP1=input('Please select:');
    switch (userInputP1)
        case '1'
            fprintf('Current Parameters:\n');
            fprintf('Sample Rate in seconds: %f\n', sampleRate);
            fprintf('Number of samples: %d\n', sampleNumber);
        
        case '2'
            exitFlag2 = 0;
            while (exitFlag2==0)
                fprintf('Change Parameters\n');
                fprintf('1. Sample Rate in seconds\n');
                fprintf('2. Sample Number\n');
                fprintf('3. Exit\n');
                userInputP2 = input('Please select:');
                switch(userInputP2)
                    case '1'
                       userInputP3 = abs(input('What is the new Sample Rate in seconds?'));
                       if(userInputP3>0)
                           sampleRate = userInputP3;
                           writeParams;
                           fprintf('The new sample rate is %f s\n', sampleRate);
                       else
                           fprintf('New value must be greater than 0\n');
                       end
                       
                    case '2'
                        userInputP4 = abs(input('What is the new number of samples?'));
                        if(userInputP4>0)
                            sampleNumber = userInputP4;
                            writeParams;
                            fprintf('The new number of samples is %d \n', sampleNumber);
                        else
                            fprintf('New value must be greater than 0\n');
                        end
                                           
                    case '3'
                        fprintf('Returning to main menu...\n');
                        exitFlag2=1;
                        
                    otherwise
                        fprintf('Invalid choice - please select again.\n');
                        
                end
            end
        case '3'
            fprintf('Returning to main menu...\n');
            exitFlag=1;
            
        otherwise
            fprintf('Invalid choice - please select again.\n');
    end
  end
end
                
function writeParams
paramArray = [sampleRate ; sampleNumber];
fileID = fopen('settings.txt',paramArray);
fwrite(fileID,paramArray);
fclose(fileID);
end

function dataCapture
s = serial('COM4')
fopen(s)
array_length=50;
x_list=zeros(1,array_length);
y_list=zeros(1,array_length);
z_list=zeros(1,array_length);
i=1;
while i<50
xData = str2num(fscanf(s));
yData =str2num(fscanf(s));
zData=str2num(fscanf(s));
x_list(i)=xData;
y_list(i)=yData;
z_list(i)=zData;
i=i+1;
end
fclose(s)
end

function saveDataToFile
dataArray = [timeData,xData,yData,zData];
fileTitleInput=input('Please name the data set: ');
ending = '.txt';
fileTitle = strcat(fileTitleInput,ending)
fileID = fopen(fileTitle);
fwrite(fileID,dataArray);
fclose(fileID);
end

function loadDataFromFile
fileTitleInput=input('Please input the name of the data set you wish to load: ');
ending = '.txt';
fileTitle = strcat(fileTitleInput,ending)
fileID = fopen(fileTitle);

fread(fileID,

end
